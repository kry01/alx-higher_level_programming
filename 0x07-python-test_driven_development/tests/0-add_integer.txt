"""
add two intergers
>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(2.5, 2)
4
>>> add_integer(4, -1)
3
>>> add_integer(2.5, 2.5)
4

>>> add_integer("hello", 100)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(100, "txt")
Traceback (most recent call last):
TypeError: b must be an integer


>>> add_integer("test", "txt")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(100)
198

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer(2.3, None)
Traceback (most recent call last):
TypeError: b must be an integer

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

"""
