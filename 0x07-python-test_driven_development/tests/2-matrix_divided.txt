
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1,2,3],[1,2,3]]

>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [0.5, 1.0, 1.5]]

>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-0.5, -1.0, -1.5]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1,2,3],[1,2,3, 4]]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided("matrix", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(10, 2)
Traceback (most recent call last):
TypeError: 'int' object is not iterable

>>> matrix_divided(None, 2)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> matrix_divided(2)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1,2,3],[1,2,3]], "div")
Traceback (most recent call last):
TypeError: div must be a number